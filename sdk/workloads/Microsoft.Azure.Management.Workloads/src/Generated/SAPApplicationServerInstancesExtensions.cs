// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Workloads
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SAPApplicationServerInstances.
    /// </summary>
    public static partial class SAPApplicationServerInstancesExtensions
    {
            /// <summary>
            /// Gets the SAP Application Server Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance.
            /// </param>
            public static SAPApplicationServerInstance Get(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName)
            {
                return operations.GetAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the SAP Application Server Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPApplicationServerInstance> GetAsync(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Puts the SAP Application Server Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance.
            /// </param>
            /// <param name='body'>
            /// The SAP Application Server instance request body.
            /// </param>
            public static SAPApplicationServerInstance Create(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, SAPApplicationServerInstance body = default(SAPApplicationServerInstance))
            {
                return operations.CreateAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Puts the SAP Application Server Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance.
            /// </param>
            /// <param name='body'>
            /// The SAP Application Server instance request body.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPApplicationServerInstance> CreateAsync(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, SAPApplicationServerInstance body = default(SAPApplicationServerInstance), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Puts the SAP Application Server Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance.
            /// </param>
            /// <param name='body'>
            /// The SAP Application Server instance request body.
            /// </param>
            public static SAPApplicationServerInstance Update(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, UpdateSAPApplicationInstanceRequest body = default(UpdateSAPApplicationInstanceRequest))
            {
                return operations.UpdateAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Puts the SAP Application Server Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance.
            /// </param>
            /// <param name='body'>
            /// The SAP Application Server instance request body.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPApplicationServerInstance> UpdateAsync(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, UpdateSAPApplicationInstanceRequest body = default(UpdateSAPApplicationInstanceRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the SAP Application Server Instance. &lt;br&gt;&lt;br&gt;This
            /// operation will be used by service only. Delete by end user will return a
            /// Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance.
            /// </param>
            public static OperationStatusResult Delete(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName)
            {
                return operations.DeleteAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the SAP Application Server Instance. &lt;br&gt;&lt;br&gt;This
            /// operation will be used by service only. Delete by end user will return a
            /// Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='applicationInstanceName'>
            /// The name of SAP Application Server instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> DeleteAsync(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName, string applicationInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, applicationInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the SAP Application server Instances in an SVI.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            public static SAPApplicationServerInstanceList List(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName)
            {
                return operations.ListAsync(resourceGroupName, sapVirtualInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the SAP Application server Instances in an SVI.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPApplicationServerInstanceList> ListAsync(this ISAPApplicationServerInstances operations, string resourceGroupName, string sapVirtualInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
