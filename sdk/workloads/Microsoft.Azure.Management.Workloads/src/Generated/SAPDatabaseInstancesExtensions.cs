// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Workloads
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for SAPDatabaseInstances.
    /// </summary>
    public static partial class SAPDatabaseInstancesExtensions
    {
            /// <summary>
            /// Gets the SAP Database Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            public static SAPDatabaseInstance Get(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName)
            {
                return operations.GetAsync(resourceGroupName, sapVirtualInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the SAP Database Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstance> GetAsync(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Puts the SAP Database Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='body'>
            /// The SAP Database Server instance request body.
            /// </param>
            public static SAPDatabaseInstance Create(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName, SAPDatabaseInstance body = default(SAPDatabaseInstance))
            {
                return operations.CreateAsync(resourceGroupName, sapVirtualInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Puts the SAP Database Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='body'>
            /// The SAP Database Server instance request body.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstance> CreateAsync(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName, SAPDatabaseInstance body = default(SAPDatabaseInstance), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Puts the SAP Database Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='body'>
            /// The SAP Database Server instance request body.
            /// </param>
            public static SAPDatabaseInstance Update(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName, UpdateSAPDatabaseInstanceRequest body = default(UpdateSAPDatabaseInstanceRequest))
            {
                return operations.UpdateAsync(resourceGroupName, sapVirtualInstanceName, body).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Puts the SAP Database Instance.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='body'>
            /// The SAP Database Server instance request body.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstance> UpdateAsync(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName, UpdateSAPDatabaseInstanceRequest body = default(UpdateSAPDatabaseInstanceRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, body, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the SAP Database Instance. &lt;br&gt;&lt;br&gt;This will be used by
            /// service only. Delete by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            public static OperationStatusResult Delete(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName)
            {
                return operations.DeleteAsync(resourceGroupName, sapVirtualInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the SAP Database Instance. &lt;br&gt;&lt;br&gt;This will be used by
            /// service only. Delete by end user will return a Bad Request error.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<OperationStatusResult> DeleteAsync(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists the SAP Database Instances in an SVI.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            public static SAPDatabaseInstanceList List(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName)
            {
                return operations.ListAsync(resourceGroupName, sapVirtualInstanceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists the SAP Database Instances in an SVI.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='resourceGroupName'>
            /// The name of the resource group. The name is case insensitive.
            /// </param>
            /// <param name='sapVirtualInstanceName'>
            /// The name of the SAP Virtual Instance.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<SAPDatabaseInstanceList> ListAsync(this ISAPDatabaseInstances operations, string resourceGroupName, string sapVirtualInstanceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(resourceGroupName, sapVirtualInstanceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
