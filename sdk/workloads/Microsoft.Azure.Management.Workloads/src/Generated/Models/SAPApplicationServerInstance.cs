// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Define the SAP Application Server Instance.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SAPApplicationServerInstance : IResource
    {
        /// <summary>
        /// Initializes a new instance of the SAPApplicationServerInstance
        /// class.
        /// </summary>
        public SAPApplicationServerInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SAPApplicationServerInstance
        /// class.
        /// </summary>
        /// <param name="instanceNo">The application server instance
        /// id.</param>
        /// <param name="subnet">The application server subnet.</param>
        /// <param name="hostname">The application server SAP host
        /// name.</param>
        /// <param name="kernelVersion">The application server SAP kernel
        /// version.</param>
        /// <param name="kernelPatch">The application server SAP kernel
        /// patch.</param>
        /// <param name="ipAddress">The application server SAP IP
        /// Address.</param>
        /// <param name="gatewayPort">The application server gateway
        /// Port.</param>
        /// <param name="icmHttpPort">The application server ICM HTTP
        /// Port.</param>
        /// <param name="icmHttpsPort">The application server ICM HTTPS
        /// Port.</param>
        /// <param name="virtualMachineId">The virtual machine.</param>
        /// <param name="status">Possible values include: 'Starting',
        /// 'Running', 'Stopping', 'Stopped', 'Unknown'</param>
        /// <param name="health">Possible values include: 'Unknown', 'Healthy',
        /// 'Unhealthy'</param>
        /// <param name="provisioningState">Possible values include:
        /// 'Succeeded', 'Updating', 'Creating', 'Failed'</param>
        /// <param name="errors">Defines the Application Instance
        /// errors.</param>
        public SAPApplicationServerInstance(long? instanceNo = default(long?), string subnet = default(string), string hostname = default(string), string kernelVersion = default(string), string kernelPatch = default(string), string ipAddress = default(string), long? gatewayPort = default(long?), long? icmHttpPort = default(long?), long? icmHttpsPort = default(long?), string virtualMachineId = default(string), string status = default(string), string health = default(string), string provisioningState = default(string), SAPApplicationServerPropertiesErrors errors = default(SAPApplicationServerPropertiesErrors))
        {
            InstanceNo = instanceNo;
            Subnet = subnet;
            Hostname = hostname;
            KernelVersion = kernelVersion;
            KernelPatch = kernelPatch;
            IpAddress = ipAddress;
            GatewayPort = gatewayPort;
            IcmHttpPort = icmHttpPort;
            IcmHttpsPort = icmHttpsPort;
            VirtualMachineId = virtualMachineId;
            Status = status;
            Health = health;
            ProvisioningState = provisioningState;
            Errors = errors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the application server instance id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceNo")]
        public long? InstanceNo { get; private set; }

        /// <summary>
        /// Gets the application server subnet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnet")]
        public string Subnet { get; private set; }

        /// <summary>
        /// Gets the application server SAP host name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.hostname")]
        public string Hostname { get; private set; }

        /// <summary>
        /// Gets the application server SAP kernel version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.kernelVersion")]
        public string KernelVersion { get; private set; }

        /// <summary>
        /// Gets the application server SAP kernel patch.
        /// </summary>
        [JsonProperty(PropertyName = "properties.kernelPatch")]
        public string KernelPatch { get; private set; }

        /// <summary>
        /// Gets the application server SAP IP Address.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipAddress")]
        public string IpAddress { get; private set; }

        /// <summary>
        /// Gets the application server gateway Port.
        /// </summary>
        [JsonProperty(PropertyName = "properties.gatewayPort")]
        public long? GatewayPort { get; private set; }

        /// <summary>
        /// Gets the application server ICM HTTP Port.
        /// </summary>
        [JsonProperty(PropertyName = "properties.icmHttpPort")]
        public long? IcmHttpPort { get; private set; }

        /// <summary>
        /// Gets the application server ICM HTTPS Port.
        /// </summary>
        [JsonProperty(PropertyName = "properties.icmHttpsPort")]
        public long? IcmHttpsPort { get; private set; }

        /// <summary>
        /// Gets the virtual machine.
        /// </summary>
        [JsonProperty(PropertyName = "properties.virtualMachineId")]
        public string VirtualMachineId { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Starting', 'Running', 'Stopping',
        /// 'Stopped', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Healthy', 'Unhealthy'
        /// </summary>
        [JsonProperty(PropertyName = "properties.health")]
        public string Health { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Succeeded', 'Updating', 'Creating',
        /// 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets defines the Application Instance errors.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public SAPApplicationServerPropertiesErrors Errors { get; private set; }

    }
}
