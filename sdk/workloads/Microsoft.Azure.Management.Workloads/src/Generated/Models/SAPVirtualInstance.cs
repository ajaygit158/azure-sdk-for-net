// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Define the SAP Virtual Instance.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SAPVirtualInstance : IResource
    {
        /// <summary>
        /// Initializes a new instance of the SAPVirtualInstance class.
        /// </summary>
        public SAPVirtualInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SAPVirtualInstance class.
        /// </summary>
        /// <param name="environment">Possible values include: 'NonProd',
        /// 'Prod'</param>
        /// <param name="sapProduct">Possible values include: 'ECC',
        /// 'S4HANA'</param>
        /// <param name="configuration">The SAP Deployment or discovery
        /// configuration</param>
        /// <param name="status">Possible values include: 'Starting',
        /// 'Running', 'Stopping', 'Stopped', 'Unknown'</param>
        /// <param name="health">Possible values include: 'Unknown', 'Healthy',
        /// 'Unhealthy'</param>
        /// <param name="state">Possible values include:
        /// 'InfrastructureDeploymentPending',
        /// 'InfrastructureDeploymentInProgress',
        /// 'InfrastructureDeploymentFailed', 'SoftwareInstallationPending',
        /// 'SoftwareInstallationInProgress', 'SoftwareInstallationFailed',
        /// 'DiscoveryPending', 'DiscoveryInProgress', 'DiscoveryFailed',
        /// 'RegistrationComplete'</param>
        /// <param name="provisioningState">Possible values include:
        /// 'Succeeded', 'Updating', 'Creating', 'Failed'</param>
        /// <param name="errors">Defines the SAP Virtual Instance
        /// errors.</param>
        public SAPVirtualInstance(string environment, string sapProduct, SAPVirtualInstanceIdentity identity = default(SAPVirtualInstanceIdentity), SAPConfiguration configuration = default(SAPConfiguration), string status = default(string), string health = default(string), string state = default(string), string provisioningState = default(string), SAPVirtualInstancePropertiesErrors errors = default(SAPVirtualInstancePropertiesErrors))
        {
            Identity = identity;
            Environment = environment;
            SapProduct = sapProduct;
            Configuration = configuration;
            Status = status;
            Health = health;
            State = state;
            ProvisioningState = provisioningState;
            Errors = errors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "identity")]
        public SAPVirtualInstanceIdentity Identity { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NonProd', 'Prod'
        /// </summary>
        [JsonProperty(PropertyName = "properties.environment")]
        public string Environment { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'ECC', 'S4HANA'
        /// </summary>
        [JsonProperty(PropertyName = "properties.sapProduct")]
        public string SapProduct { get; set; }

        /// <summary>
        /// Gets or sets the SAP Deployment or discovery configuration
        /// </summary>
        [JsonProperty(PropertyName = "properties.configuration")]
        public SAPConfiguration Configuration { get; set; }

        /// <summary>
        /// Gets possible values include: 'Starting', 'Running', 'Stopping',
        /// 'Stopped', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Healthy', 'Unhealthy'
        /// </summary>
        [JsonProperty(PropertyName = "properties.health")]
        public string Health { get; private set; }

        /// <summary>
        /// Gets possible values include: 'InfrastructureDeploymentPending',
        /// 'InfrastructureDeploymentInProgress',
        /// 'InfrastructureDeploymentFailed', 'SoftwareInstallationPending',
        /// 'SoftwareInstallationInProgress', 'SoftwareInstallationFailed',
        /// 'DiscoveryPending', 'DiscoveryInProgress', 'DiscoveryFailed',
        /// 'RegistrationComplete'
        /// </summary>
        [JsonProperty(PropertyName = "properties.state")]
        public string State { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Succeeded', 'Updating', 'Creating',
        /// 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets defines the SAP Virtual Instance errors.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public SAPVirtualInstancePropertiesErrors Errors { get; private set; }

    }
}
