// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Workloads.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// SAP monitor info on Azure (ARM properties and SAP monitor properties)
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class WorkloadMonitor : TrackedResource
    {
        /// <summary>
        /// Initializes a new instance of the WorkloadMonitor class.
        /// </summary>
        public WorkloadMonitor()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkloadMonitor class.
        /// </summary>
        /// <param name="location">The geo-location where the resource
        /// lives</param>
        /// <param name="id">Fully qualified resource ID for the resource. Ex -
        /// /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
        /// <param name="name">The name of the resource</param>
        /// <param name="type">The type of the resource. E.g.
        /// "Microsoft.Compute/virtualMachines" or
        /// "Microsoft.Storage/storageAccounts"</param>
        /// <param name="systemData">Azure Resource Manager metadata containing
        /// createdBy and modifiedBy information.</param>
        /// <param name="tags">Resource tags.</param>
        /// <param name="provisioningState">State of provisioning of the
        /// monitor. Possible values include: 'Accepted', 'Creating',
        /// 'Updating', 'Failed', 'Succeeded', 'Deleting', 'Migrating'</param>
        /// <param name="errors">Defines the SAP monitor errors.</param>
        /// <param name="appLocation">The monitor resources will be deployed in
        /// the monitoring region. The subnet region should be same as the
        /// monitoring region.</param>
        /// <param name="routingPreference">Sets the routing preference of the
        /// monitor. By default only RFC1918 traffic is routed to the customer
        /// VNET. Possible values include: 'Default', 'RouteAll'</param>
        /// <param name="managedResourceGroupId">The ARM id of the resource
        /// group the monitor resources get deployed into.</param>
        /// <param name="logAnalyticsWorkspaceArmId">The ARM ID of the Log
        /// Analytics Workspace that is used for monitoring.</param>
        /// <param name="logAnalyticsWorkspaceId">The workspace ID of the log
        /// analytics workspace to be used for monitoring.</param>
        /// <param name="monitorSubnet">The subnet which the SAP monitor will
        /// be deployed in</param>
        public WorkloadMonitor(string location, string id = default(string), string name = default(string), string type = default(string), SystemData systemData = default(SystemData), IDictionary<string, string> tags = default(IDictionary<string, string>), string provisioningState = default(string), MonitorPropertiesErrors errors = default(MonitorPropertiesErrors), string appLocation = default(string), string routingPreference = default(string), string managedResourceGroupId = default(string), string logAnalyticsWorkspaceArmId = default(string), string logAnalyticsWorkspaceId = default(string), string monitorSubnet = default(string))
            : base(location, id, name, type, systemData, tags)
        {
            ProvisioningState = provisioningState;
            Errors = errors;
            AppLocation = appLocation;
            RoutingPreference = routingPreference;
            ManagedResourceGroupId = managedResourceGroupId;
            LogAnalyticsWorkspaceArmId = logAnalyticsWorkspaceArmId;
            LogAnalyticsWorkspaceId = logAnalyticsWorkspaceId;
            MonitorSubnet = monitorSubnet;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets state of provisioning of the monitor. Possible values include:
        /// 'Accepted', 'Creating', 'Updating', 'Failed', 'Succeeded',
        /// 'Deleting', 'Migrating'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets defines the SAP monitor errors.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public MonitorPropertiesErrors Errors { get; private set; }

        /// <summary>
        /// Gets or sets the monitor resources will be deployed in the
        /// monitoring region. The subnet region should be same as the
        /// monitoring region.
        /// </summary>
        [JsonProperty(PropertyName = "properties.appLocation")]
        public string AppLocation { get; set; }

        /// <summary>
        /// Gets or sets sets the routing preference of the monitor. By default
        /// only RFC1918 traffic is routed to the customer VNET. Possible
        /// values include: 'Default', 'RouteAll'
        /// </summary>
        [JsonProperty(PropertyName = "properties.routingPreference")]
        public string RoutingPreference { get; set; }

        /// <summary>
        /// Gets or sets the ARM id of the resource group the monitor resources
        /// get deployed into.
        /// </summary>
        [JsonProperty(PropertyName = "properties.managedResourceGroupId")]
        public string ManagedResourceGroupId { get; set; }

        /// <summary>
        /// Gets or sets the ARM ID of the Log Analytics Workspace that is used
        /// for monitoring.
        /// </summary>
        [JsonProperty(PropertyName = "properties.logAnalyticsWorkspaceArmId")]
        public string LogAnalyticsWorkspaceArmId { get; set; }

        /// <summary>
        /// Gets or sets the workspace ID of the log analytics workspace to be
        /// used for monitoring.
        /// </summary>
        [JsonProperty(PropertyName = "properties.logAnalyticsWorkspaceId")]
        public string LogAnalyticsWorkspaceId { get; set; }

        /// <summary>
        /// Gets or sets the subnet which the SAP monitor will be deployed in
        /// </summary>
        [JsonProperty(PropertyName = "properties.monitorSubnet")]
        public string MonitorSubnet { get; set; }

    }
}
