// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Define the SAP Database Instance.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SAPDatabaseInstance : IResource
    {
        /// <summary>
        /// Initializes a new instance of the SAPDatabaseInstance class.
        /// </summary>
        public SAPDatabaseInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SAPDatabaseInstance class.
        /// </summary>
        /// <param name="subnet">The database subnet.</param>
        /// <param name="databaseSid">The database SID.</param>
        /// <param name="databaseType">The SAP database type.</param>
        /// <param name="ipAddress">The database IP Address.</param>
        /// <param name="vmDetails">The list of virtual machines.</param>
        /// <param name="status">Possible values include: 'Starting',
        /// 'Running', 'Stopping', 'Stopped', 'Unknown'</param>
        /// <param name="health">Possible values include: 'Unknown', 'Healthy',
        /// 'Unhealthy'</param>
        /// <param name="provisioningState">Possible values include:
        /// 'Succeeded', 'Updating', 'Creating', 'Failed'</param>
        /// <param name="errors">Defines the Database Instance errors.</param>
        public SAPDatabaseInstance(string subnet = default(string), string databaseSid = default(string), string databaseType = default(string), string ipAddress = default(string), IList<DatabaseVmDetails> vmDetails = default(IList<DatabaseVmDetails>), string status = default(string), string health = default(string), string provisioningState = default(string), SAPDatabasePropertiesErrors errors = default(SAPDatabasePropertiesErrors))
        {
            Subnet = subnet;
            DatabaseSid = databaseSid;
            DatabaseType = databaseType;
            IpAddress = ipAddress;
            VmDetails = vmDetails;
            Status = status;
            Health = health;
            ProvisioningState = provisioningState;
            Errors = errors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the database subnet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnet")]
        public string Subnet { get; private set; }

        /// <summary>
        /// Gets the database SID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.databaseSid")]
        public string DatabaseSid { get; private set; }

        /// <summary>
        /// Gets the SAP database type.
        /// </summary>
        [JsonProperty(PropertyName = "properties.databaseType")]
        public string DatabaseType { get; private set; }

        /// <summary>
        /// Gets the database IP Address.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipAddress")]
        public string IpAddress { get; private set; }

        /// <summary>
        /// Gets the list of virtual machines.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vmDetails")]
        public IList<DatabaseVmDetails> VmDetails { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Starting', 'Running', 'Stopping',
        /// 'Stopped', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Healthy', 'Unhealthy'
        /// </summary>
        [JsonProperty(PropertyName = "properties.health")]
        public string Health { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Succeeded', 'Updating', 'Creating',
        /// 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets defines the Database Instance errors.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public SAPDatabasePropertiesErrors Errors { get; private set; }

    }
}
