// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Workloads.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Node profile
    /// </summary>
    public partial class NodeProfile
    {
        /// <summary>
        /// Initializes a new instance of the NodeProfile class.
        /// </summary>
        public NodeProfile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeProfile class.
        /// </summary>
        /// <param name="nodeSku">VM SKU for node(s)</param>
        /// <param name="osImage">OS image used for creating the nodes</param>
        /// <param name="osDisk">OS disk details</param>
        /// <param name="name">VM/VMSS name</param>
        /// <param name="dataDisks">Data disks details</param>
        /// <param name="nodeResourceIds">VM/VMSS resource ARM Ids</param>
        public NodeProfile(string nodeSku, OsImageProfile osImage, DiskInfo osDisk, string name = default(string), IList<DiskInfo> dataDisks = default(IList<DiskInfo>), IList<string> nodeResourceIds = default(IList<string>))
        {
            Name = name;
            NodeSku = nodeSku;
            OsImage = osImage;
            OsDisk = osDisk;
            DataDisks = dataDisks;
            NodeResourceIds = nodeResourceIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets VM/VMSS name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets VM SKU for node(s)
        /// </summary>
        [JsonProperty(PropertyName = "nodeSku")]
        public string NodeSku { get; set; }

        /// <summary>
        /// Gets or sets OS image used for creating the nodes
        /// </summary>
        [JsonProperty(PropertyName = "osImage")]
        public OsImageProfile OsImage { get; set; }

        /// <summary>
        /// Gets or sets OS disk details
        /// </summary>
        [JsonProperty(PropertyName = "osDisk")]
        public DiskInfo OsDisk { get; set; }

        /// <summary>
        /// Gets or sets data disks details
        /// </summary>
        [JsonProperty(PropertyName = "dataDisks")]
        public IList<DiskInfo> DataDisks { get; set; }

        /// <summary>
        /// Gets VM/VMSS resource ARM Ids
        /// </summary>
        [JsonProperty(PropertyName = "nodeResourceIds")]
        public IList<string> NodeResourceIds { get; private set; }

    }
}
