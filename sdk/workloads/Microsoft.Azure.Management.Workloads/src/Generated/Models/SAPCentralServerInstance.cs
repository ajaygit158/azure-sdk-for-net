// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Workloads.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Define the SAP Central Server Instance.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class SAPCentralServerInstance : IResource
    {
        /// <summary>
        /// Initializes a new instance of the SAPCentralServerInstance class.
        /// </summary>
        public SAPCentralServerInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SAPCentralServerInstance class.
        /// </summary>
        /// <param name="instanceNo">The central server instance id.</param>
        /// <param name="subnet">The central server subnet.</param>
        /// <param name="kernelVersion">The central server kernel
        /// version.</param>
        /// <param name="kernelPatch">The central server kernel patch.</param>
        /// <param name="vmDetails">The list of virtual machines.</param>
        /// <param name="status">Possible values include: 'Starting',
        /// 'Running', 'Stopping', 'Stopped', 'Unknown'</param>
        /// <param name="health">Possible values include: 'Unknown', 'Healthy',
        /// 'Unhealthy'</param>
        /// <param name="provisioningState">Possible values include:
        /// 'Succeeded', 'Updating', 'Creating', 'Failed'</param>
        /// <param name="errors">Defines the Central Instance errors.</param>
        public SAPCentralServerInstance(long? instanceNo = default(long?), string subnet = default(string), MessageServerProperties messageServerProperties = default(MessageServerProperties), EnqueueServerProperties enqueueServerProperties = default(EnqueueServerProperties), GatewayServerProperties gatewayServerProperties = default(GatewayServerProperties), string kernelVersion = default(string), string kernelPatch = default(string), IList<CentralServerVmDetails> vmDetails = default(IList<CentralServerVmDetails>), string status = default(string), string health = default(string), string provisioningState = default(string), SAPCentralServerPropertiesErrors errors = default(SAPCentralServerPropertiesErrors))
        {
            InstanceNo = instanceNo;
            Subnet = subnet;
            MessageServerProperties = messageServerProperties;
            EnqueueServerProperties = enqueueServerProperties;
            GatewayServerProperties = gatewayServerProperties;
            KernelVersion = kernelVersion;
            KernelPatch = kernelPatch;
            VmDetails = vmDetails;
            Status = status;
            Health = health;
            ProvisioningState = provisioningState;
            Errors = errors;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the central server instance id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.instanceNo")]
        public long? InstanceNo { get; private set; }

        /// <summary>
        /// Gets the central server subnet.
        /// </summary>
        [JsonProperty(PropertyName = "properties.subnet")]
        public string Subnet { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.messageServerProperties")]
        public MessageServerProperties MessageServerProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.enqueueServerProperties")]
        public EnqueueServerProperties EnqueueServerProperties { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties.gatewayServerProperties")]
        public GatewayServerProperties GatewayServerProperties { get; set; }

        /// <summary>
        /// Gets the central server kernel version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.kernelVersion")]
        public string KernelVersion { get; private set; }

        /// <summary>
        /// Gets the central server kernel patch.
        /// </summary>
        [JsonProperty(PropertyName = "properties.kernelPatch")]
        public string KernelPatch { get; private set; }

        /// <summary>
        /// Gets the list of virtual machines.
        /// </summary>
        [JsonProperty(PropertyName = "properties.vmDetails")]
        public IList<CentralServerVmDetails> VmDetails { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Starting', 'Running', 'Stopping',
        /// 'Stopped', 'Unknown'
        /// </summary>
        [JsonProperty(PropertyName = "properties.status")]
        public string Status { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Unknown', 'Healthy', 'Unhealthy'
        /// </summary>
        [JsonProperty(PropertyName = "properties.health")]
        public string Health { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Succeeded', 'Updating', 'Creating',
        /// 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "properties.provisioningState")]
        public string ProvisioningState { get; private set; }

        /// <summary>
        /// Gets defines the Central Instance errors.
        /// </summary>
        [JsonProperty(PropertyName = "properties.errors")]
        public SAPCentralServerPropertiesErrors Errors { get; private set; }

    }
}
